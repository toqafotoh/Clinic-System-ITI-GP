@model Clinic_System.BLL.ModelVM.AppointmentVM.CreateAppointmentVM
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Title = "Manage Appointments";
    var today = DateTime.Now.ToString("yyyy-MM-dd");
    var doctors = ViewBag.Doctors as List<Clinic_System.BLL.ModelVM.DoctorVM.GetAllDoctorsVM>;
    var appointments = ViewBag.Appointments as List<Clinic_System.BLL.ModelVM.AppointmentVM.GetAllAppointmentsVM>;
}
<link rel="stylesheet" href="https://cdn.datatables.net/2.1.5/css/dataTables.dataTables.css">
<script src="https://code.jquery.com/jquery-3.7.1.js"></script>
<script src="https://cdn.datatables.net/2.1.5/js/dataTables.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/luxon/2.3.1/luxon.min.js"></script>
<div class="add-appointment-container">
    <h3>Add New Appointment</h3>

    <form asp-action="CreateAppointment" method="post">
        <div>
            <label for="doctor-dropdown">Select Doctor</label>
            <select id="doctor-dropdown" asp-for="DoctorID" class="form-control" required>
                <option value="" disabled selected>Select Doctor</option>
                @foreach (var doctor in doctors)
                {
                    <option value="@doctor.DoctorID">@doctor.FullName</option>
                }
            </select>
            <span asp-validation-for="DoctorID" class="text-danger"></span>
        </div>

        <div>
            <label for="appointment-date">Appointment Date</label>
            <input type="date" id="appointment-date" asp-for="AppointmentDate" class="form-control" value="@today" required>
            <span asp-validation-for="AppointmentDate" class="text-danger"></span>
        </div>

        <div>
            <label for="appointment-time">Appointment Time</label>
            <input type="time" id="appointment-time" asp-for="AppointmentTime" class="form-control" required>
            <span asp-validation-for="AppointmentTime" class="text-danger"></span>
        </div>

        <button type="submit" class="add-appointment-btn">Add Appointment</button>
    </form>

<table id="appointments-table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Date</th>
            <th>Department Name</th>
            <th>Start Date</th>
            <th>Doctor Name</th>
            <th>Price</th>
            <th>State</th>
            <th>Activity</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var appointment in appointments)
        {
            var isDeletedClass = appointment.IsDeleted ? "btn-danger" : "btn-success";
            var isDeletedText = appointment.IsDeleted ? "Deleted" : "Active";
            var rowClass = appointment.Isbooked ? "state-booked" : "state-available";
            <tr class="@rowClass">
                <td>@appointment.ID</td>
                <td>@appointment.AppointmentDate.ToString("yyyy-MM-dd")</td>
                <td>@appointment.DepartmentName</td>
                <td>@appointment.AppointmentTime.ToString(@"hh\:mm")</td>
                <td>@appointment.DoctorName</td>
                <td>@appointment.Price</td>
                <td>@(appointment.Isbooked ? "Booked" : "Available")</td>
                    <td>
                        <button class="status-btn @isDeletedClass">@isDeletedText</button>
                    </td>
                <td>
                        <a asp-action="EditAppointment" method="get" asp-route-id="@appointment.ID" style="display:inline;" class="edit-btn">Edit</a>
                        <button type="button" class="delete-btn" onclick="confirmDelete(@appointment.ID, '@appointment.DoctorName')">
                            <i class="fas fa-trash-alt"></i> Delete
                        </button>
                </td>
            </tr>
        }
    </tbody>
</table>

    <!-- Modal -->
    <div class="modal fade" id="deleteAppointmentModal" tabindex="-1" role="dialog" aria-labelledby="deleteAppointmentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteAppointmentModalLabel">Confirm Deletion</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p><i class="fas fa-trash-alt"></i> Are you sure you want to delete the appointment with <span id="appointmentDoctorName"></span>?</p>
                    <form id="deleteAppointmentForm" method="post" action="@Url.Action("DeleteAppointment", "Appointment")">
                        <input type="hidden" name="ID" id="appointmentId" />
                        <div class="modal-footer">
                            <button type="button" class="btn btn-cancel" data-dismiss="modal">
                                <i class="fas fa-times btn-icon"></i> Cancel
                            </button>
                            <button type="submit" class="btn btn-delete">
                                <i class="fas fa-trash-alt btn-icon"></i> Delete
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <script>
        new DataTable('#appointments-table');
    </script>

    <script>
        function confirmDelete(appointmentId, doctorName) {
            document.getElementById('appointmentDoctorName').textContent = doctorName;
            document.getElementById('appointmentId').value = appointmentId;
            $('#deleteAppointmentModal').modal('show');
        }

        document.getElementById('deleteAppointmentForm').addEventListener('submit', function (e) {
            e.preventDefault();

            const form = e.target;
            const formData = new FormData(form);

            fetch(form.action, {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the appointment.');
                });
        });
    </script>

<style>

        .status-btn {
            padding: 5px 10px;
            border-radius: 4px;
            border: none;
            font-size: 14px;
            color: white;
            cursor: default;
        }

        .btn-success {
            background-color: #28a745;
        }

        .btn-danger {
            background-color: #dc3545;
        }
    /* Style the table */
    #appointments-table {
        width: 100%;
        border-collapse: collapse;
    }

        /* Set the table header background color */
        #appointments-table thead {
            background-color: #2d53c633;
        }

        /* Style table rows */
        #appointments-table tbody tr {
            background-color: white;
        }

            /* Style table rows on hover */
            #appointments-table tbody tr:hover {
                background-color: #f1f1f1;
            }

        /* Style table cells */
        #appointments-table th,
        #appointments-table td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        /* Style action buttons */
        #appointments-table .edit-btn,
        #appointments-table .delete-btn {
            border: none;
            color: #fff;
            padding: 5px 10px;
            cursor: pointer;
            border-radius: 4px;
            font-size: 14px;
        }

        #appointments-table .edit-btn {
            background-color: #6ab470;
        }

        #appointments-table .delete-btn {
            background-color: #dc3545;
        }

            #appointments-table .edit-btn:hover,
            #appointments-table .delete-btn:hover {
                opacity: 0.8;
            }

        /* Style state column for booked appointments */
        #appointments-table .state-booked {
            background-color: #f8d7da;
            color: #721c24;
            font-weight: bold;
        }

        #appointments-table .state-available {
            background-color: #d4edda;
            color: #155724;
            font-weight: bold;
        }

        #appointments-table .edit-btn i,
        #appointments-table .delete-btn i {
            margin-right: 5px;
        }

    .add-appointment-container {
        background-color: #2d53c633;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 6px 6px 0px 0px rgba(0, 0, 0, 0.2);
        margin-bottom: 20px;
    }

        .add-appointment-container h3 {
            margin-bottom: 20px;
            font-size: 1.5rem;
            font-weight: bold;
            color: #898686;
        }

        .add-appointment-container select,
        .add-appointment-container input {
            width: calc(100% - 20px);
            margin-bottom: 20px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 10px;
            font-size: 1rem;
        }

        .add-appointment-btn {
            background-color: #4E73DF;
            color: #fff;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 4px;
            font-size: 1rem;
        }

            .add-appointment-btn:hover {
                background-color: #0056b3;
            }

            .add-appointment-container {
    background-color: #2d53c633;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 6px 6px 0px 0px rgba(0, 0, 0, 0.2);
    margin-bottom: 20px;
    max-width: 100%; /* Ensure container is responsive */
    overflow-x: auto; /* Add horizontal scroll if content overflows */
}

#appointments-table {
    width: 100%;
    border-collapse: collapse;
    table-layout: auto; /* Ensure responsive table layout */
    overflow-x: auto; /* Allow horizontal scrolling if needed */
}

/* Style table cells */
#appointments-table th,
#appointments-table td {
    padding: 10px;
    text-align: left;
    border-bottom: 1px solid #ddd;
    white-space: nowrap; /* Prevent text wrapping inside table cells */
}

#appointments-table thead {
    background-color: #2d53c633;
}

#appointments-table tbody tr {
    background-color: white;
}

#appointments-table tbody tr:hover {
    background-color: #f1f1f1;
}

/* Adjust button sizes */
#appointments-table .edit-btn,
#appointments-table .delete-btn {
    padding: 5px 10px;
    font-size: 14px;
    border-radius: 4px;
}


</style>
    <style>
        /* Modal buttons */
        .modal-footer .btn-delete {
            background-color: #dc3545; /* Red color for delete button */
            color: #fff;
            border: none;
        }

        .modal-footer .btn-cancel {
            background-color: #d0e7f5; /* Light blue color for cancel button */
            color: #333;
            border: none;
        }

        .modal-footer .btn-icon {
            margin-right: 5px; /* Space between icon and text */
        }
    </style>

